<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd">

	<http pattern="/resources/**" security="none" />
	<http pattern="/webjars/**" security="none" />

	<http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/login/**" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<intercept-url pattern="/register/**" access="permitAll" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/artist/add" access="hasRole('ROLE_ARTIST')" />
		<intercept-url pattern="/venue/add" access="hasRole('ROLE_VENUE')" />
		<intercept-url pattern="/event/add"
			access="hasAnyRole('ROLE_ARTIST','ROLE_VENUE')" />
		<intercept-url pattern="/artists/**/update" access="hasRole('ROLE_ARTIST')" />
		<intercept-url pattern="/venues/**/update" access="hasRole('ROLE_VENUE')" />
		<intercept-url pattern="/events/**/update"
			access="hasAnyRole('ROLE_ARTIST','ROLE_VENUE')" />
		<intercept-url pattern="/**"
			access="isAnonymous() or hasRole('ROLE_USER')" />
		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
		<access-denied-handler error-page="/denied" />
		<logout invalidate-session="true" logout-success-url="/"
			logout-url="/logout" />
	</http>

	<!-- beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased"> 
		<beans:property name="decisionVoters"> <beans:list> <beans:bean class="org.springframework.security.access.vote.RoleVoter" 
		/> </beans:list> </beans:property> </beans:bean -->

	<beans:bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/login/login_check" />
		<beans:property name="usernameParameter" value="username"/>
		<beans:property name="passwordParameter" value="password"/>
		<beans:property name="authenticationFailureHandler"
			ref="securityLoginFailureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="securityLoginSuccessHandler" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService" />
	</authentication-manager>

	<beans:bean id="customUserDetailsService"
		class="com.gigs2go.model.services.CustomUserDetailsService">
	</beans:bean>

	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
	</beans:bean>

	<beans:bean id="securityLoginSuccessHandler"
		class="com.gigs2go.mvc.security.SecurityLoginSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/" />
	</beans:bean>

	<beans:bean id="securityLoginFailureHandler"
		class="com.gigs2go.mvc.security.SecurityLoginFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login/failure" />
	</beans:bean>

</beans:beans>